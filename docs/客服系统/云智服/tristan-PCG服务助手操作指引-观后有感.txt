目标:
作为团体信息顶级入口, 收敛问题, 逐步自动化的收集、归纳、解决、沉淀、统计分析
就目前来说使用云智服客服聊天方式替代群聊、一对一聊天
将聊天内容:
	通过人员进行分层过滤: 机器人 -> 一线人员 -> 二线人员, 使得每一层尽可能少的接触需要处理的问题
	通过问题进行逐步沉淀: 问题所处位置层、处理方式层, 使得最终99%的问题都可以文档化, 
		最终达到最轻量级的人员投入化

角色:
	用户:
		所处团体的一个人, 有疑问于历史/现在/未来状况 时, 会话的发起人, 会话结束时质量的评价人
	机器人:
		平台自动化功能落地的执行者, 与用户和客服进行沟通, 首次会话发起时展示问题, 
			会话结束时发送评价列表请求评价
	客服:
		一线:
			首次与用户沟通的人, 
			完善用户提出的问题, 方式为不断询问用户, 查找资料, 使得尽可能的判断出问题具体的情况
			从文档库中找到并答复重复问题, 判断新问题实现录工单、转线(一线/二线)
			对问题进行归类、沉淀文档, 反复总结, 使得答复更加拟人、高效、准确, 案例库的编写
		二线: ???
			由一线直接转线或者从工单接入
			定位问题(找日志、找监控、复现问题)、明确时间、解决问题
			
			
疑问?
	一线和二线的协作方式是什么样的:
		当一线沟通时二线时无感知的
		当二线沟通时一线是否无感知?
			
	展示与沟通的协作方式是什么样的
	

内容板块:
	某产品-某功能
	
有哪些可能的内容方式?
内容方式:
	咨询:
		目标?
			明确想要做什么:
				关键词:
					提取/折叠、清洗、转换、匹配、关联
				场景:
					正推/反推
			为什么要这样做
			接下来大概怎么做
			为什么接下来这么做
		处理人?
			[同组|不同组]一线、[同组|不同组]二线、工单
			顺序:
				用户 -> 一线 [-> 同组一线 | 不同组一线] -> 用户
					-> 二线 [-> 同组二线 | 不同组二线] 	-> 用户
					-> 工单								-> 用户
					-> 二线 [-> 同组二线 | 不同组二线]	-> 用户
														-> 用户

			一线:
				定位事情的实际位置(根据已有记忆/查文档)
				回复重复的事情答案
				遇到无法定位以及新的事情时转线给二线
			二线:
				查看上一级定位事情的实际位置
				定位事情的实际位置
				如果能快速回复答案:
					回复事情答案 -> 用户 -> 一线
				反之:
					回复事情解决的时间点 -> 用户 -> 一线(工单号)
					记录工单
					有计划的解决事情并记录文档并回复事情答案 -> 用户 -> 一线
			
	接入&使用&变更: 
		参考文档在哪里
		怎么做、需要准备什么、怎么准备、用到什么系统的什么功能
		需要和什么人进行交流、需要什么数据、什么文件、从哪里获取这些
		主要是告诉如果做而非直接帮其做这个事情, 因为目前并非打通与其他系统的自动执行, 风险过大
		
	
	故障排查
		时间-功能 发生了什么事情, 尽可能的描述清楚哪里出现问题
		直接展示该时间该功能的监控状态、日志、变更记录、处理状态和进度(tapd地址)、异常原因(故障单地址)
		尽量回复问题解决方案
		对于多次出现或者达到故障级别的需要自动录入到棱镜系统中
		
	
	
	优化建议/投诉
		明确功能
		目前功能是什么样子的？
		期望功能是什么样子的？
		不满意哪些:
			什么功能:
			什么角度:
				操作: 不易使用, 重复操作, 容易误操作, 一些情况下无法使用
				性能
				稳定性
				安全性
		
		
		
价值统计:
	具体的产生了多少价值?
		用户量、会话量
		事情量、问题量
		知识库量
		简介带动量

用户角度:
	会话内容关联:
		聚合用户历史所有的聊天内容, 不需要重复打字
	历史操作关联:
		判断用户使用的系统-场景-功能
	输入内容方式的便捷性
		输入框自动联想

客服角度:
	重复内容自动化处理
	知识库(地图、内容)
	输入内容方式的便捷性
	会话总结: 从更加 拟人化、高效化、准确化, 案例库的角度去写
	人机对话、通知机制
	优化与用户对话的提示
	
系统角度:
	数据统计
	安全: 权限、内容安全
	多层次的进行

终极形态:
	自动化运维
		工单
		CMDB(状态) + 指令库 + 编排	
	
疑问:
	系统恢复不需要多添加多余的话语, 只需要回复 "您好，很高兴为您服务", 
		将 "请简单描述您的问题，谢谢~" 放到快捷语里面
		使得用户明白第一次发送问题之后不需要重复发送问题
	转接成功之后系统没有自动回复转接成功?
		转接接收人需要回复一条信息 使得用户可以明白转接成功了
		如果一直在转接中就会半个小时卡死：
			删除PCG服务助手, 重新拉取会话是可以的
	okr
	元数据/明确事情, 聊天界面需要有这样一个描述事情的选项
	工单内部内嵌一个通知工单, 工单处理前需要需要与用户沟通进行明确事情
	tapd进度查询
	
	让用户养成很好的提高效率的习惯
	
	将 1对1 变成 1对1对1:
		将 1单对1 变成 1双对1单对1:
			用户 单对 客服 变成 系统 双对 用户 单对 客服
		通过发送 'hi, 系统' 切换到 系统级对话, 通过发送 'hi, 客服' 切换到 客服级对话
	如果有历史tapd工单则展示历史的工单列表及其进度
	
	打通聊天系统和其他系统的元数据地图和内容, 使得尽可能的将聊天作为顶级入口
	
效率的角度? 

	
	